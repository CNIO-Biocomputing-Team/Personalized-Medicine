require 'rbbt/util/open'

data_files = {
  "h.sapiens" => "FOOO",
  "hsa_gene_map.tab" => "FOOO",
  "drugs" => "ftp://ftp.genome.jp/pub/kegg/medicus/drug/drug"
}

data_files.each do |name, url|
  file File.join('orig', name) do |t|
    Open.write(t.name, Open.read(url, :cache => false))
  end
end

file :genes => 'orig/h.sapiens' do |t|
  pairs = {}
  entry = nil
  Open.read(t.prerequisites.first).each do |line|
    if line =~ /^ENTRY\s+(\d+)/
      entry = $1
      next
    end

    if line =~ /Ensembl: (ENSG\d+)/
      pairs[entry] = $1
    end
  end

  Open.write(t.name, ['#Ensembl Gene ID','KEGG Gene ID'] * "\t" + "\n" + pairs.collect{|entry, ens| [ens, "hsa:" + entry] * "\t"} * "\n")
end

file :pathways => 'orig/hsa/' do |t|
  File.open(t.name, 'w') do |f|
    f.puts "#KEGG Pathway ID\tDefinition"
    Dir.glob(File.join(t.prerequisites.first,'*')) do |file|
      pathway = File.basename(file).sub(/.html/,'')

      if Open.read(file) =~ /DEFINITION\s+(.*)/
        f.puts [pathway, $1] * "\t"
      end
    end
  end
end

file :gene_pathway => 'orig/hsa/' do |t|
  data = Open.to_hash(File.join(t.prerequisites.first,'hsa_gene_map.tab'), :sep2 => ' ')
  File.open(t.name, 'w') do |f|
    f.puts "#" + ['KEGG Gene ID', 'KEGG Pathways'] * "\t"
    data.each do |gene, pathway|
      f.puts "hsa:#{ gene }\t#{pathway.flatten.collect{|name| "hsa" + name} * "|"}"
    end
  end

end

file :gene_drug => 'orig/drugs' do |t|
  pairs = {}
  drug = nil
  Open.read(t.prerequisites.first).
    scan(/^[A-Z].*?(?:^[A-Z])/sm).select{|line| line =~ /^ENTRY|TARGET/}.collect{|line| line.sub(/\s+/,' ')}.each do |line|
      if line =~ /^ENTRY\s+(\w+)/
        drug = $1
        next
      end

      if line =~ /TARGET.*?\[HSA:(.*?)\]/
        genes = $1.split(/\s/)
        genes.each do |gene|
          puts "#{ gene } => #{ drug}"
          pairs[gene] ||= []
          pairs[gene] << drug
        end
      end
  end

  Open.write(t.name, ['#KEGG Gene ID', 'KEGG Drug ID'] * "\t" + "\n" + pairs.collect{|gene, drugs| [gene, drugs * "|" ] * "\t"} * "\n")

end

task :default => [:genes]
